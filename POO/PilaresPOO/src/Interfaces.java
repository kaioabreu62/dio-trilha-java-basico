public class Interfaces {
    public static void main(String[] args) {
        /* Interface
           Antes de tudo, N√ÉO estamos nos referindo a interface gr√°fica. Tudo bem? üòÅüòâ

           Como vimos anteriormente, heran√ßa √© um dos pilares de POO, mas uma curiosidade que se deve ser esclarecida, na linguagem Java, √© que a mesma n√£o permite o que conhecemos como Heran√ßa M√∫ltipla.
           A medida que v√£o surgindo novas necessidades, novos equipamentos (objetos), que nascem para atender as expectativas de oferecer ferramentas com finalidades bem espec√≠ficas, por exemplo: Impressoras, Digitalizadoras, Copiadoras, etc.
           Observem que n√£o h√° uma especifica√ß√£o de marca, modelo e ou capacidades de execu√ß√£o das classes citadas acima, isto √© o que consideramos o n√≠vel mais abstrato da orienta√ß√£o a objetos, que denominamos como interfaces.

           - Imprimir, Digitalizar e Copiar
           Como citado acima, Java n√£o permite heran√ßa m√∫ltipla, logo, vamos imaginar que, recebemos o desafio de projetar uma nova classe, para criar objetos que representam as tr√™s caracter√≠sticas citadas acima e que iremos denominar de EquipamentoMultifuncional.
           Antes de iniciarmos a representa√ß√£o via c√≥digo, devemos compreender que, assim como em classes e m√©todos abstratos, quando herdamos de uma interface, precisamos implementar todos os seus m√©todos, pois os mesmos s√£o implicitamente public abstract.

         */
    }
}
